Character Controller

Should:
- Check an array of incoming button type inputs (light atk, heavy atk, etc) rather than actual button inputs.
	- Should allow to detect one input from multiple buttons mapped to same action, and to (hopefully) remove some edge cases on tracking same-frame inputs.
	- Will also allow 'on-press' or 'on-release' buttons to be a setting, and not effect move selection.
	- Detect 'neutral' as an input when no new inputs have occurred for a number of frames.

- Track the characters state. Variables? or struct?
	- Movement direction/speed (probably just an int, pos/neg for direction)
	- Attack State
		- Idle
		- Move wind-up frames
		- Move charge-up frames
		- Move active frames
		- Move recovery frames
		- On-hit frames



- Based on inputs and state, select a move from a pre-defined list, then fire an event, based on that move.
- While executing a move (not in idle/on-hit state), once beyond the frame allowance for switching moves, clear the currently buffered inputs.
	- Idle
		- Execute the given move
	- charging
		- If final input for move occurs in every new input, continue the charging animation, until fully charged.
		- If released, execute the active frames of the move
	- charged
		- If input continues to occur, loop the charged animation
		- If input continues to occur, execute the cancel animation
		- If input is released, execute the powered up move
	- wind-up
		- If new inputs result in a different move (single button to multiple buttons, different move from same chain (idle or another move)), blend between the wind-up animations, and execute the new move instead, skipping the executed number of frames.
		- If new inputs result in a move in a chain, queue up the chained move to occur on the first recovery frame.
	- active
		- If within a few frames of the end of active, and inputs result in a move in a chain, queue up the selected move and execute on first recovery frame. 

	- recovery
		- If within the a tolerance of the start of the recovery frames, and inputs result in a move in a chain, execute the move.
		- If within a few frames of the end of recovery, queue up the selected move, and execute on the first idle frame.

	- on-hit
		- If within a few frames of the end of on-hit frames, queue up the selected move, and execute on the first idle frame.


Single Move Data
	- Animation (containing various anim notifies)
	- List of chained move options
	- List of moves this move can chain from (can also include idle)
	- Is move chargeable?

Each move should be made up of a number of parts
	- Wind-up animation
	- Charge-up animation
	- Charge-up loop, if fully charged
	- Charge recovery, if charge move isn't released in time
	- Active/Charge active animation
	- Recovery animation

Single Move Animations should use anim notifies to set flags on the character controller.
	- Set active move
	- Signal wind-up frame start
	- Signal wind-up frame limit to transition to other move
	- Signal end of wind-up frames
	- Signal end of charge-up frames
	- Signal start/end of active frames
	- Signal recovery frame limit to execute chained move
	- Signal acceptable time to buffer to another move
	- Signal end of recovery frames	

Use animation segments to seperate windup, active and recovery segments of an animation.

Add event for cancelling current move, clearing any active hit-boxes, states etc.

